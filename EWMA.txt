rm(list = ls())
library(parallel)
library(foreach)
library(iterators)
library(doParallel)

result <- function(d){
#d<-0
k<-2.89
p_0 <- 0.05
m <- 50
p_1 <- p_0+d*sqrt(p_0*(1-p_0)/m)
n <- 1 
lambda <- 0.2
h1<-m*p_0+k*sqrt(lambda/(2-lambda)*m*p_0*(1-p_0))
h2<-m*p_0-k*sqrt(lambda/(2-lambda)*m*p_0*(1-p_0))
loop <- 20000

cl <- makeCluster(detectCores())
registerDoParallel(cl)

rls <- foreach(i = 1:loop,.combine = 'c')%dopar%{
  Z <- m*p_0
  for (t in 1:8000) {
    x <- rbinom(n,m,p_1)
    Z <- lambda*x+(1-lambda)*Z
    if(Z > h1 |Z<h2|  t == 8000){
      rl <- t
      break
    }
  }
  rl
}

stopCluster(cl)

arl <- mean(rls)
sdrl <- sd(rls)
return(c(arl,sdrl))
}

output<-matrix(1:20,10,2)
j <- 1
for (d in c(0,0.05,0.1,0.25,0.5,0.75,1,1.5,2,3)) {
  output[j,] <- result(d)
  j <- j+1
}

print(output)
write.table(output, file = "output.csv",sep = ",", row.names = FALSE, col.names = FALSE)